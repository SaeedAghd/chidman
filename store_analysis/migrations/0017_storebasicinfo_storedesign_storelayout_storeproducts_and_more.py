# Generated by Django 5.1.6 on 2025-08-16 21:05

import django.core.validators
import django.db.models.deletion
import store_analysis.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('store_analysis', '0016_alter_storeanalysis_video_time_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StoreBasicInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('store_name', models.CharField(help_text='نام کامل فروشگاه (حداقل 3 کاراکتر)', max_length=200, validators=[store_analysis.models.validate_store_name], verbose_name='نام فروشگاه')),
                ('store_location', models.CharField(help_text='آدرس دقیق فروشگاه', max_length=500, verbose_name='آدرس کامل فروشگاه')),
                ('city', models.CharField(help_text='شهر محل فروشگاه', max_length=100, verbose_name='شهر')),
                ('area', models.CharField(help_text='منطقه یا محله فروشگاه', max_length=100, verbose_name='منطقه')),
                ('store_type', models.CharField(choices=[('supermarket', 'سوپرمارکت'), ('hypermarket', 'هایپرمارکت'), ('clothing', 'فروشگاه پوشاک'), ('appliance', 'لوازم خانگی'), ('bookstore', 'کتاب\u200cفروشی'), ('pharmacy', 'داروخانه'), ('electronics', 'الکترونیک'), ('jewelry', 'جواهرات'), ('sports', 'ورزشی'), ('beauty', 'آرایشی و بهداشتی'), ('other', 'سایر')], max_length=50, verbose_name='نوع فروشگاه')),
                ('store_size', models.PositiveIntegerField(help_text='متراژ کل فروشگاه (10 تا 100,000 متر مربع)', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100000)], verbose_name='متراژ فروشگاه (متر مربع)')),
                ('store_dimensions', models.CharField(help_text='ابعاد تقریبی (مثال: 20×30 متر)', max_length=200, verbose_name='ابعاد فروشگاه')),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^[\\d\\-\\+\\(\\)\\s]+$', 'شماره تماس نامعتبر است')], verbose_name='شماره تماس')),
                ('email', models.EmailField(blank=True, help_text='ایمیل برای ارسال گزارش\u200cها', max_length=254, verbose_name='ایمیل')),
            ],
            options={
                'verbose_name': 'اطلاعات پایه فروشگاه',
                'verbose_name_plural': 'اطلاعات پایه فروشگاه\u200cها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoreDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('design_style', models.CharField(choices=[('traditional', 'سنتی'), ('modern', 'مدرن'), ('minimal', 'مینیمال'), ('luxury', 'لوکس'), ('industrial', 'صنعتی'), ('scandinavian', 'اسکاندیناوی'), ('vintage', 'کلاسیک'), ('contemporary', 'معاصر'), ('other', 'سایر')], max_length=50, verbose_name='سبک طراحی')),
                ('brand_colors', models.CharField(help_text='رنگ\u200cهای اصلی برند و دکوراسیون', max_length=200, verbose_name='رنگ\u200cهای اصلی')),
                ('decorative_elements', models.TextField(blank=True, help_text='عناصر تزئینی و دکوراتیو فروشگاه', verbose_name='عناصر دکوراتیو')),
                ('main_lighting', models.CharField(choices=[('natural', 'طبیعی (نور خورشید)'), ('artificial', 'مصنوعی (لامپ)'), ('mixed', 'ترکیبی (طبیعی + مصنوعی)')], max_length=20, verbose_name='نورپردازی اصلی')),
                ('lighting_intensity', models.CharField(choices=[('low', 'کم'), ('medium', 'متوسط'), ('high', 'زیاد')], default='medium', max_length=20, verbose_name='شدت نورپردازی')),
                ('color_temperature', models.CharField(choices=[('warm', 'گرم (زرد)'), ('neutral', 'خنثی (سفید)'), ('cool', 'سرد (آبی)')], default='neutral', max_length=20, verbose_name='دمای رنگ نور')),
            ],
            options={
                'verbose_name': 'طراحی فروشگاه',
                'verbose_name_plural': 'طراحی\u200cهای فروشگاه',
            },
        ),
        migrations.CreateModel(
            name='StoreLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('entrances', models.PositiveIntegerField(help_text='تعداد ورودی\u200cهای فروشگاه (1 تا 10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='تعداد ورودی\u200cها')),
                ('shelf_count', models.PositiveIntegerField(help_text='تعداد قفسه\u200cهای اصلی فروشگاه', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='تعداد قفسه اصلی')),
                ('shelf_dimensions', models.TextField(help_text='ابعاد و مشخصات قفسه\u200cها', verbose_name='ابعاد تقریبی هر قفسه')),
                ('shelf_contents', models.TextField(help_text='توضیح محصولات موجود در هر قفسه', verbose_name='نوع محصولات هر قفسه')),
                ('checkout_location', models.TextField(help_text='موقعیت و تعداد صندوق\u200cهای پرداخت', verbose_name='محل صندوق\u200cهای پرداخت')),
                ('unused_area_type', models.CharField(choices=[('empty', 'منطقه خالی'), ('low_traffic', 'کم\u200cترافیک'), ('storage', 'انبار'), ('staff', 'فضای کارکنان'), ('maintenance', 'نگهداری'), ('delivery', 'تحویل'), ('other', 'سایر')], default='empty', max_length=20, verbose_name='نوع منطقه بلااستفاده')),
                ('unused_area_size', models.PositiveIntegerField(default=0, help_text='متراژ مناطق بلااستفاده یا کم\u200cترافیک', validators=[django.core.validators.MaxValueValidator(100000)], verbose_name='متراژ منطقه بلااستفاده')),
                ('unused_area_reason', models.TextField(default='', help_text='توضیح دلیل بلااستفاده بودن مناطق', verbose_name='دلیل بلااستفاده بودن')),
                ('unused_areas', models.TextField(help_text='توضیح دقیق مناطق بلااستفاده', verbose_name='توضیحات تکمیلی مناطق بلااستفاده')),
                ('layout_restrictions', models.TextField(blank=True, help_text='محدودیت\u200cهای موجود در چیدمان فروشگاه', verbose_name='محدودیت\u200cهای چیدمان')),
                ('store_plan', models.FileField(blank=True, help_text='فایل نقشه یا طرح فروشگاه (حداکثر 10MB)', upload_to='store_plans/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'pdf', 'dwg']), store_analysis.models.validate_file_size], verbose_name='نقشه فروشگاه')),
                ('store_photos', models.ImageField(blank=True, help_text='عکس\u200cهای فروشگاه (حداکثر 10MB، 4000x4000 پیکسل)', upload_to='store_photos/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png']), store_analysis.models.validate_file_size, store_analysis.models.validate_image_dimensions], verbose_name='عکس\u200cهای فروشگاه')),
            ],
            options={
                'verbose_name': 'چیدمان فروشگاه',
                'verbose_name_plural': 'چیدمان\u200cهای فروشگاه',
            },
        ),
        migrations.CreateModel(
            name='StoreProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('product_categories', models.JSONField(blank=True, help_text='دسته\u200cبندی محصولات فروشگاه', verbose_name='دسته\u200cبندی محصولات')),
                ('top_products', models.TextField(blank=True, help_text='لیست محصولات پرفروش', verbose_name='پرفروش\u200cترین محصولات')),
                ('sales_volume', models.DecimalField(decimal_places=2, default=0, help_text='متوسط فروش روزانه فروشگاه', max_digits=15, verbose_name='حجم فروش روزانه (تومان)')),
                ('pos_system', models.CharField(blank=True, help_text='نام نرم\u200cافزار صندوق فروش', max_length=100, verbose_name='نرم\u200cافزار صندوق')),
                ('sales_file', models.FileField(blank=True, help_text='فایل گزارش فروش (حداکثر 10MB)', upload_to='sales_files/', validators=[django.core.validators.FileExtensionValidator(['xlsx', 'xls', 'csv', 'pdf']), store_analysis.models.validate_file_size], verbose_name='فایل فروش')),
                ('product_catalog', models.FileField(blank=True, help_text='فایل کاتالوگ محصولات (حداکثر 10MB)', upload_to='product_catalogs/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx']), store_analysis.models.validate_file_size], verbose_name='کاتالوگ محصولات')),
                ('inventory_system', models.CharField(blank=True, help_text='نرم\u200cافزار مدیریت موجودی', max_length=100, verbose_name='سیستم موجودی')),
                ('supplier_count', models.PositiveIntegerField(default=0, help_text='تعداد تامین\u200cکنندگان محصولات', validators=[django.core.validators.MaxValueValidator(1000)], verbose_name='تعداد تامین\u200cکنندگان')),
            ],
            options={
                'verbose_name': 'محصولات فروشگاه',
                'verbose_name_plural': 'محصولات فروشگاه\u200cها',
            },
        ),
        migrations.CreateModel(
            name='StoreSurveillance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('has_surveillance', models.BooleanField(default=False, verbose_name='دوربین نظارتی')),
                ('camera_count', models.PositiveIntegerField(blank=True, help_text='تعداد دوربین\u200cهای نظارتی (حداکثر 100)', null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='تعداد دوربین\u200cها')),
                ('camera_locations', models.TextField(blank=True, help_text='توضیح موقعیت نصب دوربین\u200cها', null=True, verbose_name='موقعیت دوربین\u200cها')),
                ('camera_coverage', models.TextField(blank=True, help_text='مناطقی که تحت پوشش دوربین\u200cها هستند', null=True, verbose_name='مناطق تحت پوشش')),
                ('recording_quality', models.CharField(choices=[('low', 'کم (480p)'), ('medium', 'متوسط (720p)'), ('high', 'زیاد (1080p)'), ('ultra', 'خیلی زیاد (4K)')], default='medium', max_length=20, verbose_name='کیفیت ضبط')),
                ('storage_duration', models.PositiveIntegerField(default=30, help_text='مدت نگهداری فیلم\u200cهای دوربین (1 تا 365 روز)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)], verbose_name='مدت نگهداری فیلم (روز)')),
            ],
            options={
                'verbose_name': 'نظارت فروشگاه',
                'verbose_name_plural': 'نظارت\u200cهای فروشگاه',
            },
        ),
        migrations.CreateModel(
            name='StoreTraffic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('customer_traffic', models.CharField(choices=[('low', 'کم (کمتر از 50 نفر در روز)'), ('medium', 'متوسط (50-200 نفر در روز)'), ('high', 'زیاد (200-500 نفر در روز)'), ('very_high', 'خیلی زیاد (بیش از 500 نفر در روز)')], max_length=20, verbose_name='ترافیک مشتری')),
                ('peak_hours', models.CharField(help_text='ساعات شلوغی فروشگاه (مثال: 18-22)', max_length=200, verbose_name='ساعات پیک فروش')),
                ('customer_movement_paths', models.CharField(choices=[('clockwise', 'ساعتگرد'), ('counterclockwise', 'پادساعتگرد'), ('mixed', 'مختلط'), ('random', 'تصادفی'), ('direct', 'مستقیم')], default='mixed', max_length=20, verbose_name='مسیر معمول حرکت مشتریان')),
                ('high_traffic_areas', models.TextField(help_text='مناطقی که بیشترین ترافیک را دارند', verbose_name='مناطق پرتردد')),
                ('customer_path_notes', models.TextField(blank=True, help_text='توضیحات بیشتر درباره رفتار مشتریان', verbose_name='توضیحات تکمیلی')),
                ('has_customer_video', models.BooleanField(default=False, verbose_name='آیا ویدیوی مسیر مشتری دارید؟')),
                ('video_duration', models.PositiveIntegerField(blank=True, help_text='مدت زمان ویدیوی مسیر مشتری (حداکثر 1 ساعت)', null=True, validators=[django.core.validators.MaxValueValidator(3600)], verbose_name='مدت زمان ویدیو (ثانیه)')),
                ('video_date', models.DateField(blank=True, null=True, verbose_name='تاریخ ضبط ویدیو')),
                ('video_time', models.TimeField(blank=True, null=True, verbose_name='ساعت ضبط ویدیو')),
                ('customer_video_file', models.FileField(blank=True, help_text='فایل ویدیوی مسیر مشتری (حداکثر 10MB)', upload_to='customer_videos/', validators=[django.core.validators.FileExtensionValidator(['mp4', 'avi', 'mov', 'mkv']), store_analysis.models.validate_file_size], verbose_name='ویدیوی مسیر مشتری')),
            ],
            options={
                'verbose_name': 'ترافیک فروشگاه',
                'verbose_name_plural': 'ترافیک\u200cهای فروشگاه',
            },
        ),
        migrations.AlterModelOptions(
            name='storeanalysis',
            options={'ordering': ['-created_at'], 'permissions': [('can_cancel_analysis', 'Can cancel analysis'), ('can_prioritize_analysis', 'Can prioritize analysis')], 'verbose_name': 'تحلیل فروشگاه', 'verbose_name_plural': 'تحلیل\u200cهای فروشگاه'},
        ),
        migrations.RemoveIndex(
            model_name='storeanalysis',
            name='store_analy_store_t_183d9e_idx',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='area',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='brand_colors',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='camera_count',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='camera_coverage',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='camera_locations',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='checkout_location',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='city',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='customer_movement_paths',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='customer_path_notes',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='customer_video_file',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='decorative_elements',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='design_style',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='entrances',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='has_surveillance',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='high_traffic_areas',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='layout_restrictions',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='peak_hours',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='pos_system',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='product_catalog',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='product_categories',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='sales_file',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='sales_volume',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='shelf_contents',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='shelf_count',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='shelf_dimensions',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='store_dimensions',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='store_location',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='store_name',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='store_photos',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='store_plan',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='store_size',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='store_type',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='top_products',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='unused_area_reason',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='unused_area_size',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='unused_area_type',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='unused_areas',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='video_date',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='video_duration',
        ),
        migrations.RemoveField(
            model_name='storeanalysis',
            name='video_time',
        ),
        migrations.AddField(
            model_name='storeanalysis',
            name='actual_duration',
            field=models.PositiveIntegerField(blank=True, help_text='مدت زمان واقعی صرف شده برای تحلیل', null=True, verbose_name='مدت زمان واقعی (دقیقه)'),
        ),
        migrations.AddField(
            model_name='storeanalysis',
            name='estimated_duration',
            field=models.PositiveIntegerField(default=30, help_text='مدت زمان تخمینی برای تکمیل تحلیل', verbose_name='مدت زمان تخمینی (دقیقه)'),
        ),
        migrations.AddField(
            model_name='storeanalysis',
            name='priority',
            field=models.CharField(choices=[('low', 'کم'), ('medium', 'متوسط'), ('high', 'زیاد'), ('urgent', 'فوری')], default='medium', max_length=20, verbose_name='اولویت تحلیل'),
        ),
        migrations.AlterField(
            model_name='storeanalysis',
            name='error_message',
            field=models.TextField(blank=True, help_text='پیام خطا در صورت عدم موفقیت', null=True, verbose_name='پیام خطا'),
        ),
        migrations.AlterField(
            model_name='storeanalysis',
            name='results',
            field=models.JSONField(blank=True, help_text='نتایج تحلیل به صورت JSON', null=True, verbose_name='نتایج'),
        ),
        migrations.AlterField(
            model_name='storeanalysis',
            name='status',
            field=models.CharField(choices=[('pending', 'در انتظار'), ('processing', 'در حال پردازش'), ('completed', 'تکمیل شده'), ('failed', 'ناموفق'), ('cancelled', 'لغو شده')], default='pending', max_length=20, verbose_name='وضعیت'),
        ),
        migrations.AddField(
            model_name='storebasicinfo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='storeanalysis',
            name='store_info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='store_analysis.storebasicinfo'),
        ),
        migrations.AddIndex(
            model_name='storeanalysis',
            index=models.Index(fields=['status', 'priority'], name='store_analy_status_5d4670_idx'),
        ),
        migrations.AddField(
            model_name='storedesign',
            name='store_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='design', to='store_analysis.storebasicinfo'),
        ),
        migrations.AddField(
            model_name='storelayout',
            name='store_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='layout', to='store_analysis.storebasicinfo'),
        ),
        migrations.AddField(
            model_name='storeproducts',
            name='store_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='store_analysis.storebasicinfo'),
        ),
        migrations.AddField(
            model_name='storesurveillance',
            name='store_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='surveillance', to='store_analysis.storebasicinfo'),
        ),
        migrations.AddField(
            model_name='storetraffic',
            name='store_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='traffic', to='store_analysis.storebasicinfo'),
        ),
        migrations.AddIndex(
            model_name='storebasicinfo',
            index=models.Index(fields=['user', 'store_type'], name='store_analy_user_id_c6bcfb_idx'),
        ),
        migrations.AddIndex(
            model_name='storebasicinfo',
            index=models.Index(fields=['city', 'area'], name='store_analy_city_88e7e0_idx'),
        ),
        migrations.AddIndex(
            model_name='storebasicinfo',
            index=models.Index(fields=['created_at'], name='store_analy_created_0f2019_idx'),
        ),
        migrations.AddIndex(
            model_name='storedesign',
            index=models.Index(fields=['design_style'], name='store_analy_design__ff3d13_idx'),
        ),
        migrations.AddIndex(
            model_name='storedesign',
            index=models.Index(fields=['main_lighting'], name='store_analy_main_li_a9eccf_idx'),
        ),
        migrations.AddIndex(
            model_name='storelayout',
            index=models.Index(fields=['unused_area_type'], name='store_analy_unused__c02e32_idx'),
        ),
        migrations.AddIndex(
            model_name='storeproducts',
            index=models.Index(fields=['sales_volume'], name='store_analy_sales_v_be6be5_idx'),
        ),
        migrations.AddIndex(
            model_name='storesurveillance',
            index=models.Index(fields=['has_surveillance'], name='store_analy_has_sur_52f8f9_idx'),
        ),
        migrations.AddIndex(
            model_name='storetraffic',
            index=models.Index(fields=['customer_traffic'], name='store_analy_custome_0184f7_idx'),
        ),
        migrations.AddIndex(
            model_name='storetraffic',
            index=models.Index(fields=['customer_movement_paths'], name='store_analy_custome_4c6526_idx'),
        ),
    ]
