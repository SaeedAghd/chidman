# Generated by Django 4.2.23 on 2025-09-27 16:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_id', models.CharField(max_length=100, unique=True, verbose_name='شناسه سفارش')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='شناسه پرداخت')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='شناسه تراکنش')),
                ('customer_name', models.CharField(blank=True, max_length=100, verbose_name='نام مشتری')),
                ('customer_email', models.EmailField(blank=True, max_length=254, verbose_name='ایمیل مشتری')),
                ('customer_phone', models.CharField(blank=True, max_length=20, verbose_name='شماره تلفن')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='مبلغ')),
                ('currency', models.CharField(default='IRR', max_length=3, verbose_name='واحد پول')),
                ('description', models.TextField(verbose_name='توضیحات')),
                ('status', models.CharField(choices=[('pending', 'در انتظار پرداخت'), ('processing', 'در حال پردازش'), ('completed', 'تکمیل شده'), ('failed', 'ناموفق'), ('cancelled', 'لغو شده'), ('refunded', 'برگشت شده')], default='pending', max_length=20, verbose_name='وضعیت')),
                ('payment_method', models.CharField(choices=[('ping_payment', 'پی پینگ'), ('zarinpal', 'زرین\u200cپال'), ('manual', 'دستی')], default='ping_payment', max_length=20, verbose_name='روش پرداخت')),
                ('gateway_response', models.JSONField(blank=True, null=True, verbose_name='پاسخ درگاه')),
                ('callback_data', models.JSONField(blank=True, null=True, verbose_name='داده\u200cهای بازگشت')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تکمیل')),
                ('is_test', models.BooleanField(default=True, verbose_name='تست')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
            ],
            options={
                'verbose_name': 'پرداخت',
                'verbose_name_plural': 'پرداخت\u200cها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('payment_created', 'ایجاد پرداخت'), ('payment_redirected', 'هدایت به درگاه'), ('payment_callback', 'بازگشت از درگاه'), ('payment_verified', 'تایید پرداخت'), ('payment_failed', 'شکست پرداخت'), ('payment_cancelled', 'لغو پرداخت'), ('payment_refunded', 'برگشت پرداخت'), ('error', 'خطا')], max_length=20, verbose_name='نوع لاگ')),
                ('message', models.TextField(verbose_name='پیام')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='داده\u200cها')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
            ],
            options={
                'verbose_name': 'لاگ پرداخت',
                'verbose_name_plural': 'لاگ\u200cهای پرداخت',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام بسته')),
                ('description', models.TextField(verbose_name='توضیحات')),
                ('package_type', models.CharField(choices=[('basic', 'پایه'), ('professional', 'حرفه\u200cای'), ('enterprise', 'سازمانی'), ('custom', 'سفارشی')], max_length=20, verbose_name='نوع بسته')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='قیمت')),
                ('currency', models.CharField(default='IRR', max_length=3, verbose_name='واحد پول')),
                ('features', models.JSONField(default=list, verbose_name='ویژگی\u200cها')),
                ('max_analyses', models.PositiveIntegerField(default=1, verbose_name='حداکثر تحلیل')),
                ('validity_days', models.PositiveIntegerField(default=30, verbose_name='اعتبار (روز)')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('is_popular', models.BooleanField(default=False, verbose_name='محبوب')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
            ],
            options={
                'verbose_name': 'بسته خدمات',
                'verbose_name_plural': 'بسته\u200cهای خدمات',
                'ordering': ['sort_order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ شروع')),
                ('end_date', models.DateTimeField(verbose_name='تاریخ پایان')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('analyses_used', models.PositiveIntegerField(default=0, verbose_name='تحلیل\u200cهای استفاده شده')),
                ('max_analyses', models.PositiveIntegerField(verbose_name='حداکثر تحلیل')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_analysis.servicepackage', verbose_name='بسته')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_analysis.payment', verbose_name='پرداخت')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'اشتراک کاربر',
                'verbose_name_plural': 'اشتراک\u200cهای کاربران',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='servicepackage',
            index=models.Index(fields=['package_type'], name='store_analy_package_39836a_idx'),
        ),
        migrations.AddIndex(
            model_name='servicepackage',
            index=models.Index(fields=['is_active'], name='store_analy_is_acti_022170_idx'),
        ),
        migrations.AddIndex(
            model_name='servicepackage',
            index=models.Index(fields=['price'], name='store_analy_price_a5d933_idx'),
        ),
        migrations.AddField(
            model_name='paymentlog',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='store_analysis.payment', verbose_name='پرداخت'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['user'], name='store_analy_user_id_b1e227_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['package'], name='store_analy_package_d0fa32_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['is_active'], name='store_analy_is_acti_e183e1_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['end_date'], name='store_analy_end_dat_eb0a98_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentlog',
            index=models.Index(fields=['payment'], name='store_analy_payment_9a570a_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentlog',
            index=models.Index(fields=['log_type'], name='store_analy_log_typ_e27667_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentlog',
            index=models.Index(fields=['created_at'], name='store_analy_created_5d5beb_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['order_id'], name='store_analy_order_i_aaebad_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_id'], name='store_analy_payment_2231e7_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='store_analy_transac_d58c49_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='store_analy_status_d804f0_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user'], name='store_analy_user_id_e76640_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at'], name='store_analy_created_7a65aa_idx'),
        ),
    ]
