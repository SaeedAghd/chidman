# Generated by Django 4.2.23 on 2025-10-18 20:49

from django.db import migrations, models


def create_servicepackage_table(apps, schema_editor):
    """Create ServicePackage table if not exists"""
    from django.db import connection
    
    with connection.cursor() as cursor:
        # Check if table exists
        if connection.vendor == 'postgresql':
            cursor.execute("""
                SELECT EXISTS (
                    SELECT 1 FROM information_schema.tables 
                    WHERE table_name = 'store_analysis_servicepackage'
                );
            """)
            exists = cursor.fetchone()[0]
        else:  # SQLite
            cursor.execute("""
                SELECT name FROM sqlite_master 
                WHERE type='table' AND name='store_analysis_servicepackage';
            """)
            exists = cursor.fetchone() is not None
        
        if not exists:
            # Create table
            if connection.vendor == 'postgresql':
                cursor.execute("""
                    CREATE TABLE store_analysis_servicepackage (
                        id SERIAL PRIMARY KEY,
                        name VARCHAR(100) NOT NULL,
                        description TEXT NOT NULL,
                        package_type VARCHAR(20) NOT NULL,
                        price NUMERIC(10, 2) NOT NULL,
                        currency VARCHAR(3) DEFAULT 'IRR' NOT NULL,
                        features JSONB DEFAULT '[]',
                        max_analyses INTEGER DEFAULT 1 NOT NULL,
                        validity_days INTEGER DEFAULT 30 NOT NULL,
                        is_active BOOLEAN DEFAULT TRUE NOT NULL,
                        is_popular BOOLEAN DEFAULT FALSE NOT NULL,
                        sort_order INTEGER DEFAULT 0 NOT NULL,
                        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
                        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL
                    );
                """)
            else:  # SQLite
                cursor.execute("""
                    CREATE TABLE store_analysis_servicepackage (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        name VARCHAR(100) NOT NULL,
                        description TEXT NOT NULL,
                        package_type VARCHAR(20) NOT NULL,
                        price DECIMAL(10, 2) NOT NULL,
                        currency VARCHAR(3) DEFAULT 'IRR' NOT NULL,
                        features TEXT DEFAULT '[]',
                        max_analyses INTEGER DEFAULT 1 NOT NULL,
                        validity_days INTEGER DEFAULT 30 NOT NULL,
                        is_active BOOLEAN DEFAULT 1 NOT NULL,
                        is_popular BOOLEAN DEFAULT 0 NOT NULL,
                        sort_order INTEGER DEFAULT 0 NOT NULL,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
                    );
                """)
            
            # Create indexes
            cursor.execute("CREATE INDEX idx_servicepackage_type ON store_analysis_servicepackage(package_type);")
            cursor.execute("CREATE INDEX idx_servicepackage_active ON store_analysis_servicepackage(is_active);")
            cursor.execute("CREATE INDEX idx_servicepackage_price ON store_analysis_servicepackage(price);")


class Migration(migrations.Migration):

    dependencies = [
        ('store_analysis', '0091_alter_promotionalbanner_end_date'),
    ]

    operations = [
        migrations.RunPython(create_servicepackage_table, reverse_code=migrations.RunPython.noop),
    ]
